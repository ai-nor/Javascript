let num = 80;

//while - поки умова істина, виконуємо цикл (НЕ ПІДТРИМУЄТЬСЯ У CYPRESS!!)

while (num < 90) {
    console.log (num); //безкінечний цикл, бо змінна не міняє значення
}

while (num < 90) {
    console.log (num); 
    num++;
}

// do-while - схожий на попередній  (НЕ ПІДТРИМУЄТЬСЯ У CYPRESS!!)

let num2 = 80;

do {
    console.log (num); 
    num++;
}
while (num < 90); 


//for

for (let i = 1; i<8; i++) { //звідки починається ітератор, умова доки цикл працює, що робити далі
    console.log (i);        // що виконувати, поки цикл триває
}

let num3 = 5;

for (let i = 1; i<8; i++) { //звідки починається ітератор, умова доки цикл працює, що робити далі
    console.log (num3);  
    num3++;      // що виконувати, поки цикл триває
}


//як зупинити цикл, одна з умов
let num5 = 5;

for (let i = 1; i<8; i++) { 
    if (num5 == 8) {
        break;                   //припинити цикл якщо умова виконується, після брейку те що прописане далі - не буде виконуватися
    }
    console.log(num5);           //якщо попередня перевірка пройшла, до цих дій не дійде
    num5++;
}


//як пропустити якусь ітерацію за умовою
for (let i = 1; i<10; i++) { 
    if (i == 8) {
        continue;                   //пропустити ітерацію, якщо умова виконується, і продовжити вже з наступної ітерації
    }
    console.log(i);           
}


for (let i = 0; i<3; i++) { 
        console.log(i + " цикл і");                      //батьківська ітерація - одна ітерація
    
    for (let j = 0; j<3; j++) { 
            console.log(j + " цикл j");                      //у кожній ітерації батьківської ітерації виконується цикл дочірньої - три рази для кожної ітерації батьківської
        }  
    }  


//потрібно вивести в консоль пірамідку - спочатку одну зірочку, потім дві, потім три.... і т.д. до визначеної кількості
